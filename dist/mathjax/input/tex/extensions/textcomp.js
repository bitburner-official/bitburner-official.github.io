!function(){"use strict";var t,e,n,r={667:function(t,e){e.q=void 0,e.q="3.2.2"},845:function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.TextcompConfiguration=void 0;var r=n(251);n(832),e.TextcompConfiguration=r.Configuration.create("textcomp",{handler:{macro:["textcomp-macros"]}})},832:function(t,e,n){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var a=n(871),s=n(108),o=n(245),x=r(n(398)),i=n(988);new a.CommandMap("textcomp-macros",{textasciicircum:["Insert","^"],textasciitilde:["Insert","~"],textasteriskcentered:["Insert","*"],textbackslash:["Insert","\\"],textbar:["Insert","|"],textbraceleft:["Insert","{"],textbraceright:["Insert","}"],textbullet:["Insert","•"],textdagger:["Insert","†"],textdaggerdbl:["Insert","‡"],textellipsis:["Insert","…"],textemdash:["Insert","—"],textendash:["Insert","–"],textexclamdown:["Insert","¡"],textgreater:["Insert",">"],textless:["Insert","<"],textordfeminine:["Insert","ª"],textordmasculine:["Insert","º"],textparagraph:["Insert","¶"],textperiodcentered:["Insert","·"],textquestiondown:["Insert","¿"],textquotedblleft:["Insert","“"],textquotedblright:["Insert","”"],textquoteleft:["Insert","‘"],textquoteright:["Insert","’"],textsection:["Insert","§"],textunderscore:["Insert","_"],textvisiblespace:["Insert","␣"],textacutedbl:["Insert","˝"],textasciiacute:["Insert","´"],textasciibreve:["Insert","˘"],textasciicaron:["Insert","ˇ"],textasciidieresis:["Insert","¨"],textasciimacron:["Insert","¯"],textgravedbl:["Insert","˵"],texttildelow:["Insert","˷"],textbaht:["Insert","฿"],textcent:["Insert","¢"],textcolonmonetary:["Insert","₡"],textcurrency:["Insert","¤"],textdollar:["Insert","$"],textdong:["Insert","₫"],texteuro:["Insert","€"],textflorin:["Insert","ƒ"],textguarani:["Insert","₲"],textlira:["Insert","₤"],textnaira:["Insert","₦"],textpeso:["Insert","₱"],textsterling:["Insert","£"],textwon:["Insert","₩"],textyen:["Insert","¥"],textcircledP:["Insert","℗"],textcompwordmark:["Insert","‌"],textcopyleft:["Insert","🄯"],textcopyright:["Insert","©"],textregistered:["Insert","®"],textservicemark:["Insert","℠"],texttrademark:["Insert","™"],textbardbl:["Insert","‖"],textbigcircle:["Insert","◯"],textblank:["Insert","␢"],textbrokenbar:["Insert","¦"],textdiscount:["Insert","⁒"],textestimated:["Insert","℮"],textinterrobang:["Insert","‽"],textinterrobangdown:["Insert","⸘"],textmusicalnote:["Insert","♪"],textnumero:["Insert","№"],textopenbullet:["Insert","◦"],textpertenthousand:["Insert","‱"],textperthousand:["Insert","‰"],textrecipe:["Insert","℞"],textreferencemark:["Insert","※"],textlangle:["Insert","〈"],textrangle:["Insert","〉"],textlbrackdbl:["Insert","⟦"],textrbrackdbl:["Insert","⟧"],textlquill:["Insert","⁅"],textrquill:["Insert","⁆"],textcelsius:["Insert","℃"],textdegree:["Insert","°"],textdiv:["Insert","÷"],textdownarrow:["Insert","↓"],textfractionsolidus:["Insert","⁄"],textleftarrow:["Insert","←"],textlnot:["Insert","¬"],textmho:["Insert","℧"],textminus:["Insert","−"],textmu:["Insert","µ"],textohm:["Insert","Ω"],textonehalf:["Insert","½"],textonequarter:["Insert","¼"],textonesuperior:["Insert","¹"],textpm:["Insert","±"],textrightarrow:["Insert","→"],textsurd:["Insert","√"],textthreequarters:["Insert","¾"],textthreesuperior:["Insert","³"],texttimes:["Insert","×"],texttwosuperior:["Insert","²"],textuparrow:["Insert","↑"],textborn:["Insert","*"],textdied:["Insert","†"],textdivorced:["Insert","⚮"],textmarried:["Insert","⚭"],textcentoldstyle:["Insert","¢",s.TexConstant.Variant.OLDSTYLE],textdollaroldstyle:["Insert","$",s.TexConstant.Variant.OLDSTYLE],textzerooldstyle:["Insert","0",s.TexConstant.Variant.OLDSTYLE],textoneoldstyle:["Insert","1",s.TexConstant.Variant.OLDSTYLE],texttwooldstyle:["Insert","2",s.TexConstant.Variant.OLDSTYLE],textthreeoldstyle:["Insert","3",s.TexConstant.Variant.OLDSTYLE],textfouroldstyle:["Insert","4",s.TexConstant.Variant.OLDSTYLE],textfiveoldstyle:["Insert","5",s.TexConstant.Variant.OLDSTYLE],textsixoldstyle:["Insert","6",s.TexConstant.Variant.OLDSTYLE],textsevenoldstyle:["Insert","7",s.TexConstant.Variant.OLDSTYLE],texteightoldstyle:["Insert","8",s.TexConstant.Variant.OLDSTYLE],textnineoldstyle:["Insert","9",s.TexConstant.Variant.OLDSTYLE]},{Insert:function(t,e,n,r){if(t instanceof i.TextParser){if(!r)return void o.TextMacrosMethods.Insert(t,e,n);t.saveText()}t.Push(x.default.internalText(t,n,r?{mathvariant:r}:{}))}})},955:function(t,e){MathJax._.components.global.isObject,MathJax._.components.global.combineConfig,MathJax._.components.global.combineDefaults,e.r8=MathJax._.components.global.combineWithMathJax,MathJax._.components.global.MathJax},251:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.Configuration=MathJax._.input.tex.Configuration.Configuration,e.ConfigurationHandler=MathJax._.input.tex.Configuration.ConfigurationHandler,e.ParserConfiguration=MathJax._.input.tex.Configuration.ParserConfiguration},398:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=MathJax._.input.tex.ParseUtil.default},871:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.parseResult=MathJax._.input.tex.SymbolMap.parseResult,e.AbstractSymbolMap=MathJax._.input.tex.SymbolMap.AbstractSymbolMap,e.RegExpMap=MathJax._.input.tex.SymbolMap.RegExpMap,e.AbstractParseMap=MathJax._.input.tex.SymbolMap.AbstractParseMap,e.CharacterMap=MathJax._.input.tex.SymbolMap.CharacterMap,e.DelimiterMap=MathJax._.input.tex.SymbolMap.DelimiterMap,e.MacroMap=MathJax._.input.tex.SymbolMap.MacroMap,e.CommandMap=MathJax._.input.tex.SymbolMap.CommandMap,e.EnvironmentMap=MathJax._.input.tex.SymbolMap.EnvironmentMap},108:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.TexConstant=MathJax._.input.tex.TexConstants.TexConstant},245:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.TextMacrosMethods=MathJax._.input.tex.textmacros.TextMacrosMethods.TextMacrosMethods},988:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.TextParser=MathJax._.input.tex.textmacros.TextParser.TextParser}},a={};function s(t){var e=a[t];if(void 0!==e)return e.exports;var n=a[t]={exports:{}};return r[t].call(n.exports,n,n.exports,s),n.exports}t=s(955),e=s(667),n=s(845),MathJax.loader&&MathJax.loader.checkVersion("[tex]/textcomp",e.q,"tex-extension"),(0,t.r8)({_:{input:{tex:{textcomp:{TextcompConfiguration:n}}}}})}();